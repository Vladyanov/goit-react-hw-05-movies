{"version":3,"file":"static/js/988.7374812b.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAc,mCAAG,sGACLL,EAASM,IAAI,wBADR,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAASM,IAAT,iBAAuBG,IADjB,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNQ,MAAAA,KAHsB,uBAClBJ,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZK,EAAO,mCAAG,WAAMH,GAAN,yFACET,EAASM,IAAT,iBAAuBG,EAAvB,aADF,uBACbF,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,sDAKPM,EAAU,mCAAG,WAAMJ,GAAN,yFACDT,EAASM,IAAT,iBAAuBG,EAAvB,aADC,uBAChBF,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD,sIChCvB,EAAuB,yCAAvB,EAAwE,0CAAxE,EAAyH,yC,SCuCzH,EAjCgC,WAC9B,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQP,GAAOQ,EAAAA,EAAAA,MAAPR,IAERS,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEEN,EAAAA,EAAAA,IAAWJ,GAFb,OAEXF,EAFW,OAGjBS,EAAWT,EAAKa,SAHC,gDAIRC,EAJQ,KAIRA,SACTC,QAAQC,IAAIF,EAASd,KAAKiB,SALT,yDAAH,qDASlBL,GACD,GAAE,CAACV,IAEJ,IAAMgB,EAAWV,EAAQW,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC3B,gBAAIC,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,qBAAkCH,MAElC,cAAGE,UAAWC,EAAd,SAAyBF,MAHGnB,EADH,IAa7B,OALgBgB,EAASM,QACvB,wBAAKN,KAEL,+DAGH,C","sources":["components/Modules/moviesAPI.jsx","webpack://react-homework-template/./src/components/pages/MovieDetailsReviewsPage/movie-details-reviews-page.module.scss?a54f","components/pages/MovieDetailsReviewsPage/MovieDetailsReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '75312bed02c00aa4fc762f08e8bb0223',\n  },\n});\n\nexport const trendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"movie-details-reviews-page_item__ZkDOc\",\"title\":\"movie-details-reviews-page_title__Xi1B7\",\"text\":\"movie-details-reviews-page_text__xkyq8\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviews } from 'components/Modules/moviesAPI';\n\nimport css from './movie-details-reviews-page.module.scss';\n\nconst MovieDetailsReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const data = await getReviews(id);\n        setReviews(data.results);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n\n    fetchReviews();\n  }, [id]);\n\n  const elements = reviews.map(({ id, author, content }) => (\n    <li className={css.item} key={id}>\n      <p className={css.title}>Author: {author}</p>\n\n      <p className={css.text}>{content}</p>\n    </li>\n  ));\n\n  const resElem = elements.length ? (\n    <ul>{elements}</ul>\n  ) : (\n    <p>We don`t have reviews for this movie</p>\n  );\n  return resElem;\n};\n\nexport default MovieDetailsReviewsPage;\n"],"names":["instance","axios","baseURL","params","api_key","trendingMovies","get","data","getMovieDetails","id","searchMovies","query","getCast","getReviews","useState","reviews","setReviews","useParams","useEffect","fetchReviews","results","response","console","log","message","elements","map","author","content","className","css","length"],"sourceRoot":""}